diff --cc src/dev_backend_habitly_eixo2/Migrations/AppDbContextModelSnapshot.cs
index 5f4c9e0,28ad5c9..0000000
--- a/src/dev_backend_habitly_eixo2/Migrations/AppDbContextModelSnapshot.cs
+++ b/src/dev_backend_habitly_eixo2/Migrations/AppDbContextModelSnapshot.cs
@@@ -41,38 -43,29 +43,51 @@@ namespace dev_backend_habitly_eixo2.Mig
                      b.ToTable("Checkins");
                  });
  
 +            modelBuilder.Entity("dev_backend_habitly_eixo2.Models.Etiqueta", b =>
 +                {
 +                    b.Property<string>("IdEtiqueta")
 +                        .HasColumnType("nvarchar(450)");
 +
 +                    b.Property<string>("Nome")
 +                        .IsRequired()
 +                        .HasMaxLength(100)
 +                        .HasColumnType("nvarchar(100)");
 +
 +                    b.HasKey("IdEtiqueta");
 +
 +                    b.ToTable("Etiquetas");
 +                });
 +
              modelBuilder.Entity("dev_backend_habitly_eixo2.Models.Habito", b =>
                  {
-                     b.Property<string>("IdHabito")
-                         .HasColumnType("nvarchar(450)");
+                     b.Property<int>("IdHabito")
+                         .ValueGeneratedOnAdd()
+                         .HasColumnType("int");
+ 
+                     SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHabito"), 1L, 1);
+ 
+                     b.Property<DateTime>("DataFim")
+                         .HasColumnType("datetime2");
+ 
+                     b.Property<DateTime>("DataInicio")
+                         .HasColumnType("datetime2");
  
                      b.Property<string>("DescricaoHabito")
                          .HasMaxLength(300)
                          .HasColumnType("nvarchar(300)");
  
-                     b.Property<string>("IdUsuario")
-                         .IsRequired()
-                         .HasColumnType("nvarchar(max)");
+                     b.Property<string>("DiasDaSemana")
+                         .HasMaxLength(20)
+                         .HasColumnType("nvarchar(20)");
  
++<<<<<<< HEAD
 +                    b.Property<bool>("IsArquivado")
 +                        .HasColumnType("bit");
 +
 +                    b.Property<int>("PeriodicidadeHabito")
++=======
+                     b.Property<int>("IdUsuario")
++>>>>>>> 759c425905ab04eff3bfd9ca1c2cc625b768de84
                          .HasColumnType("int");
  
                      b.Property<string>("StatusHabito")
@@@ -145,8 -140,8 +162,13 @@@
                          .HasMaxLength(200)
                          .HasColumnType("nvarchar(200)");
  
++<<<<<<< HEAD
 +                    b.Property<int>("Perfil")
 +                        .HasColumnType("int");
++=======
+                     b.Property<byte>("Perfil")
+                         .HasColumnType("tinyint");
++>>>>>>> 759c425905ab04eff3bfd9ca1c2cc625b768de84
  
                      b.Property<string>("Senha")
                          .IsRequired()
diff --cc src/dev_backend_habitly_eixo2/Models/Habito.cs
index 32c9710,3cf5318..0000000
--- a/src/dev_backend_habitly_eixo2/Models/Habito.cs
+++ b/src/dev_backend_habitly_eixo2/Models/Habito.cs
@@@ -15,21 -15,24 +16,34 @@@ namespace dev_backend_habitly_eixo2.Mod
  
          [Required]
          [StringLength(100)]
-         public string TituloHabito { get; set; }
+         public string TituloHabito { get; set; } = string.Empty;
  
          [StringLength(300)]
-         public string DescricaoHabito { get; set; }
+         public string? DescricaoHabito { get; set; }
+ 
+         [StringLength(20)]
+         public string DiasDaSemana { get; set; } = string.Empty;
  
          [Required]
-         public int PeriodicidadeHabito { get; set; }
+         [DataType(DataType.DateTime)] // Mapeia para DATE no SQL Server
+         public DateTime DataInicio { get; set; }
  
          [Required]
++<<<<<<< HEAD
 +        public string StatusHabito { get; set; }
 +        
 +        // Indica se o h├íbito est├í arquivado. Quando arquivado, os check-ins devem ser preservados.
 +        public bool IsArquivado { get; set; }
 +
 +        // Etiquetas associadas (many-to-many)
 +        public virtual ICollection<Etiqueta> Etiquetas { get; set; }
++=======
+         [DataType(DataType.DateTime)] // Mapeia para DATE no SQL Server
+         public DateTime DataFim { get; set; }
+ 
+         [Required]
+         [StringLength(20)]
+         public string StatusHabito { get; set; } = "Ativo";
++>>>>>>> 759c425905ab04eff3bfd9ca1c2cc625b768de84
      }
  }
diff --cc src/dev_backend_habitly_eixo2/Views/Habitos/Details.cshtml
index f7e92cb,8f3e483..0000000
--- a/src/dev_backend_habitly_eixo2/Views/Habitos/Details.cshtml
+++ b/src/dev_backend_habitly_eixo2/Views/Habitos/Details.cshtml
@@@ -44,58 -48,6 +48,63 @@@
  </div>
  <div>
      <a asp-action="Edit" asp-route-id="@Model?.IdHabito">Edit</a> |
+     <a asp-action="Delete" asp-route-id="@Model?.IdHabito">Delete</a> |
      <a asp-action="Index">Back to List</a>
 -</div>
++<<<<<<< HEAD:src/dev_backend_habitly_eixo2/Views/Habitoes/Details.cshtml
 +</div>
 +
 +<div class="mt-4">
 +    <h4>Etiquetas</h4>
 +    @if (Model?.Etiquetas != null && Model.Etiquetas.Any())
 +    {
 +        <ul>
 +        @foreach (var et in Model.Etiquetas)
 +        {
 +            <li>
 +                @et.Nome
 +                <form asp-controller="Etiquetas" asp-action="RemoveFromHabito" method="post" style="display:inline">
 +                    <input type="hidden" name="idEtiqueta" value="@et.IdEtiqueta" />
 +                    <input type="hidden" name="idHabito" value="@Model.IdHabito" />
 +                    @Html.AntiForgeryToken()
 +                    <button type="submit" class="btn btn-sm btn-link">Remove</button>
 +                </form>
 +            </li>
 +        }
 +        </ul>
 +    }
 +    else
 +    {
 +        <p>No etiquetas assigned.</p>
 +    }
 +
 +    <!-- A sele├º├úo m├║ltipla de etiquetas via checkboxes foi removida (redundante). Use 'Create new etiqueta' ou a p├ígina /Etiquetas -->
 +
 +    <hr />
 +    <h5>Create new etiqueta</h5>
 +    <form asp-controller="Etiquetas" asp-action="CreateAndAddToHabito" method="post" class="form-inline">
 +        @Html.AntiForgeryToken()
 +        <input type="hidden" name="idHabito" value="@Model.IdHabito" />
 +        <div class="form-group" style="margin-right:10px">
 +            <input type="text" name="nome" class="form-control" placeholder="Nome da etiqueta" required style="width:250px" />
 +        </div>
 +        <button type="submit" class="btn btn-success">Create & Add</button>
 +    </form>
 +
 +    <h5 class="mt-3">Archive habit</h5>
 +    @if (!Model.IsArquivado)
 +    {
 +        <form asp-controller="Etiquetas" asp-action="ArchiveHabito" method="post">
 +            @Html.AntiForgeryToken()
 +            <input type="hidden" name="idHabito" value="@Model.IdHabito" />
 +            <button type="submit" class="btn btn-warning">Archive</button>
 +        </form>
 +    }
 +    else
 +    {
 +        <span class="text-muted">This habit is archived.</span>
 +    }
 +
 +</div>
++=======
++</div>
++>>>>>>> 759c425905ab04eff3bfd9ca1c2cc625b768de84:src/dev_backend_habitly_eixo2/Views/Habitos/Details.cshtml
* Unmerged path src/dev_backend_habitly_eixo2/Controllers/HabitoesController.cs
* Unmerged path src/dev_backend_habitly_eixo2/Views/Habitoes/Index.cshtml
